---
name: Build Image

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "*"

env:
  IMG_REGISTRY_HOST: quay.io
  IMG_REGISTRY_ORG: eastizle
  TEST_TAG: user/app:test

jobs:
  validation:
    name: Validation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: abelfodil/protoc-action@v1
      with:
        protoc-version: '3.19.4'
    - name: Read package version
      id: package-version
      run: |
        id=`cargo pkgid | cut -d "#" -f2`
        echo id=$id>> $GITHUB_OUTPUT
    - name: Print package version
      run: echo "Git reference name = ${{ github.ref_name }}, package version = ${{ steps.package-version.outputs.id }}"
    - name: Verify git reference name matches the package version
      if: ${{ startsWith(github.ref, 'refs/tags/') and github.ref_name != steps.package-version.outputs.id }}
      run: exit 1
  build:
    name: Build
    needs:
      - validation
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/rlsbin
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
          registry: ${{ env.IMG_REGISTRY_HOST }}
      - name: Build and export to docker
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
          build-args: |
            GITHUB_SHA=${{ github.sha }}
      - name: Smoke Test Help
        run: |
          docker run --rm -t ${{ env.TEST_TAG }} rlsbin --help
      - name: Smoke Test Version
        run: |
          docker run --rm -t ${{ env.TEST_TAG }} rlsbin --version
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          build-args: |
            GITHUB_SHA=${{ github.sha }}
